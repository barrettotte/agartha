version: '3.9'
name: carthage

networks:
  carthage_network:

services:
  alertmanager:
    container_name: alertmanager
    image: prom/alertmanager:v0.25.0
    ports:
      - '9093:9093'
    volumes:
      - /mnt/docker/alertmanager:/alertmanager-data
      - ./alertmanager/config.yml:/etc/alertmanager/config.yml
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager-data'
      - '--cluster.advertise-address=0.0.0.0:9093'
    restart: unless-stopped

  cadvisor:
    container_name: cadvisor
    image: gcr.io/cadvisor/cadvisor:v0.46.0
    ports:
      - '8085:8080'
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /cgroup:/cgroup:ro
    privileged: true
    devices:
      - /dev/kmsg:/dev/kmsg
    restart: unless-stopped

  dashy:
    container_name: dashy
    image: lissy93/dashy:2.1.1
    ports:
      - '8082:80'
    volumes:
      - ./dashy/conf.yml:/app/public/conf.yml
    restart: unless-stopped

  grafana:
    container_name: grafana
    image: grafana/grafana:9.3.6
    ports:
      - '3000:3000'
    volumes:
      - /mnt/docker/grafana:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
    env_file:
      - ./env/grafana.env
    restart: unless-stopped
  
  librespeed:
    container_name: librespeed
    image: linuxserver/librespeed:5.2.5
    ports:
      - '4080:80'
    volumes:
      - /home/docker/volumes/librespeed:/config # no NFS
      - ./librespeed/index.html:/config/www/index.html
    env_file:
      - ./env/librespeed.env
    restart: unless-stopped

  loki:
    container_name: loki
    image: grafana/loki:2.7.3
    ports:
      - '3100:3100'
    volumes:
      - /mnt/docker/loki:/loki
      - ./loki/loki-config.yml:/etc/loki/local-config.yml
    command:
      - '-config.file=/etc/loki/local-config.yml'
    restart: unless-stopped

  nginx:
    container_name: nginx
    image: nginx:1.23.3-alpine
    ports:
      - '80:80'
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    restart: unless-stopped

  node-exporter:
    container_name: node-exporter
    image: prom/node-exporter:v1.5.0
    ports:
      - '9100:9100'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped

  portainer:
    container_name: portainer
    image: portainer/portainer-ce:2.17.0
    ports:
      - '9000:9000' # http
      - '9443:9443'
    volumes:
      - /mnt/docker/portainer:/data
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped

  prometheus:
    container_name: prometheus
    image: prom/prometheus:v2.42.0
    ports: 
      - '9090:9090'
    volumes:
      - /mnt/docker/prometheus:/prometheus-data
      - ./prometheus:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus-data'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped

  promtail:
    container_name: promtail
    image: grafana/promtail:2.7.3
    ports:
      - '1514:1514'
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/log:/ext_logs:ro
      - ./promtail/promtail.yml:/etc/promtail/docker-config.yml
    command:
      - '-config.file=/etc/promtail/docker-config.yml'
      - '-config.expand-env'
    environment:
      - HOSTNAME=carthage
    depends_on:
      - loki
    restart: unless-stopped

  pushgateway:
    container_name: pushgateway
    image: prom/pushgateway:v1.5.1
    ports:
      - '9091:9091'
    restart: unless-stopped

  uptime-kuma:
    container_name: uptime-kuma
    image: louislam/uptime-kuma:1
    volumes:
      - /mnt/docker/uptimekuma:/app/data
    ports:
      - '3001:3001'
    restart: unless-stopped

# TODO: move to smaller compose files?
# separate networks for monitoring vs misc?
# grafana/grafana-image-renderer ?


