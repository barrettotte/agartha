version: '3.9'
name: carthage

services:
  alertmanager:
    container_name: alertmanager
    image: prom/alertmanager:v0.25.0
    ports:
      - '9093:9093'
    volumes:
      - /mnt/docker/alertmanager:/alertmanager-data
      - ./alertmanager/config.yml:/etc/alertmanager/config.yml
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager-data'
      - '--cluster.advertise-address=0.0.0.0:9093'
    restart: unless-stopped

  cadvisor:
    container_name: cadvisor
    image: gcr.io/cadvisor/cadvisor:v0.46.0
    ports:
      - '8085:8080'
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /cgroup:/cgroup:ro
    privileged: true
    devices:
      - /dev/kmsg:/dev/kmsg
    restart: unless-stopped

  graphite-exporter:
    container_name: graphite-exporter
    image: prom/graphite-exporter:v0.13.1
    ports:
      - '2003:9109/tcp' # mock graphite carbon receiver (plaintext), TrueNAS needs to use graphite on port 2003
      - '2003:9109/udp'
      - '9108:9108' # prometheus scrape target
    volumes:
      - ./graphite-exporter/graphite_mapping.yml:/etc/graphite_mapping.yml
    command:
      - '--graphite.mapping-config=/etc/graphite_mapping.yml'
      - '--log.level=debug'
      - '--graphite.sample-expiry=10m' # prevent disk fill up
    restart: unless-stopped

  grafana:
    container_name: grafana
    image: grafana/grafana:9.3.6
    ports:
      - '3000:3000'
    volumes:
      - /mnt/docker/grafana:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
    user: '472:472'
    env_file:
      - ./env/grafana.env
    restart: unless-stopped

  influxdb:
    container_name: influxdb
    image: influxdb:2.6-alpine
    ports:
      - '8086:8086'
    volumes:
      - /home/docker/volumes/influxdb:/var/lib/influxdb2 # no NFS
    env_file:
      - ./env/influxdb.env
    restart: unless-stopped

  loki:
    container_name: loki
    image: grafana/loki:2.7.3
    ports:
      - '3100:3100'
    volumes:
      - /mnt/docker/loki:/loki
      - ./loki/loki-config.yml:/etc/loki/local-config.yml
    command:
      - '-config.file=/etc/loki/local-config.yml'
    restart: unless-stopped

  node-exporter:
    container_name: node-exporter
    image: prom/node-exporter:v1.5.0
    ports:
      - '9100:9100'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped

  portainer-agent:
    container_name: portainer-agent
    image: portainer/agent:2.17.1-alpine
    ports:
      - '9001:9001'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    restart: unless-stopped

  prometheus:
    container_name: prometheus
    image: prom/prometheus:v2.42.0
    ports: 
      - '9090:9090'
    volumes:
      - /mnt/docker/prometheus:/prometheus-data
      - ./prometheus:/etc/prometheus
    user: '65534:65534'
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus-data'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped

  promtail:
    container_name: promtail
    image: grafana/promtail:2.7.3
    ports:
      - '1514:1514/tcp'
      - '1514:1514/udp'
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/log:/ext_logs:ro
      - ./promtail/promtail.yml:/etc/promtail/config.yml
    command:
      - '-config.file=/etc/promtail/config.yml'
      - '-config.expand-env'
    environment:
      - HOSTNAME=carthage
    depends_on:
      - loki
    restart: unless-stopped

  pushgateway:
    container_name: pushgateway
    image: prom/pushgateway:v1.5.1
    ports:
      - '9091:9091'
    restart: unless-stopped
