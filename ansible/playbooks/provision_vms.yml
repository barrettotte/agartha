- name: provision core vms with terraform
  hosts: luxor.agartha
  become: true
  gather_facts: false
  tasks:
    - name: init terraform
      shell:
        cmd: terraform init
        chdir: /home/ansible/infra/luxor/terraform
      changed_when: false

    - name: validate terraform
      shell:
        cmd: terraform validate
        chdir: /home/ansible/infra/luxor/terraform
      changed_when: false

    - name: apply terraform
      shell:
        cmd: terraform apply -auto-approve -parallelism 2
        chdir: /home/ansible/infra/luxor/terraform
      register: terraform_result
      changed_when: "'Resources: 0 added, 0 changed, 0 destroyed.' not in terraform_result.stdout"

- name: base configuration for each vm
  hosts: core
  become: true
  vars_files:
    - ../vars/secrets.yml
  roles:
    - name: configure sshd
      role: ../roles/sshd

    - name: add wheel group
      role: ../roles/wheel

    - name: add personal user
      role: ../roles/user
      vars:
        user: "{{ personal_user }}"
        comment: 'personal user'
        password: "{{ personal_password }}"
        user_groups: 'wheel'
        ssh_pub: "{{ personal_ssh_pub }}"
    
    - name: add docker user
      role: ../roles/user
      vars:
        user: docker
        comment: 'docker service user'
        user_groups: 'wheel'
        ssh_pub: "{{ docker_ssh_pub }}"

  tasks:
    - name: ensure packer user is removed
      user:
        name: packer
        state: absent
        remove: yes

- name: configure each vm
  hosts: core
  become: true
  pre_tasks:
    - name: install general dependencies
      apt:
        pkg:
          - sudo
          - git
          - vim
          - curl
          - python3-pip
          - build-essential
          - lsb-release
          - rsync
          - nfs-common
          - apparmor
          - borgbackup
          - sqlite3
          - jq
        state: latest
        update_cache: true

    - name: Check for reboot
      stat:
        path: /var/run/reboot-required
        get_md5: false
      register: reboot_required

    - name: Reboot if kernel updates need installed
      reboot:
        msg: "Reboot started by Ansible to install kernel updates"
        connect_timeout: 5
        reboot_timeout: 300
        pre_reboot_delay: 0
        post_reboot_delay: 30
        test_command: uptime
      when: reboot_required.stat.exists

  tasks:
    - name: Mount TrueNAS NFS
      mount:
        src: "{{ truenas_interface + ':' + nfs_docker_path }}"
        path: /mnt/docker
        opts: rw,soft,intr,nfsvers=4
        fstype: nfs
        state: mounted
  roles:
    - name: install docker
      role: geerlingguy.docker
      vars:
        docker_users: 
          - docker
          - ansible
          - "{{ personal_user }}"
        docker_install_compose_plugin: true
        docker_compose_package: docker-compose-plugin
        docker_compose_package_state: present

- name: mount media directories
  hosts: giza.agartha,athens.agartha
  become: true
  tasks:
    - name: mount media directories
      mount:
        src: "{{ truenas_interface + ':' + nfs_media_path }}"
        path: "/mnt/media"
        opts: rw,soft,intr,nfsvers=4
        fstype: nfs
        state: mounted

- name: setup core vm backups
  hosts: core
  become: true
  tasks:
    - name: init borg repository
      shell:
        cmd: borg init --encryption=none /mnt/backups
      changed_when: false

    # TODO: set crontab with backup script
