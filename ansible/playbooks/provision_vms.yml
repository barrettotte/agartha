- name: provision core vms with terraform
  hosts: luxor.agartha
  become: true
  gather_facts: false
  tasks:
    - name: init terraform
      shell:
        cmd: terraform init
        chdir: /home/ansible/infra/luxor/terraform
      changed_when: false

    - name: validate terraform
      shell:
        cmd: terraform validate
        chdir: /home/ansible/infra/luxor/terraform
      changed_when: false

    - name: apply terraform
      shell:
        cmd: terraform apply -auto-approve -parallelism 2
        chdir: /home/ansible/infra/luxor/terraform
      register: terraform_result
      changed_when: "'Resources: 0 added, 0 changed, 0 destroyed.' not in terraform_result.stdout"

- name: base configuration for each vm
  hosts: core
  become: true
  vars_files:
    - ../vars/secrets.yml
  roles:
    - name: configure sshd
      role: ../roles/sshd

    - name: add wheel group
      role: ../roles/wheel

    - name: add personal user
      role: ../roles/user
      vars:
        user: "{{ personal_user }}"
        comment: 'personal user'
        password: "{{ personal_password }}"
        user_groups: 'wheel'
        ssh_pub: "{{ personal_ssh_pub }}"
    
    - name: add docker user
      role: ../roles/user
      vars:
        user: docker
        comment: 'docker service user'
        user_groups: 'wheel'
        ssh_pub: "{{ docker_ssh_pub }}"

  tasks:
    - name: ensure packer user is removed
      user:
        name: packer
        state: absent
        remove: yes

- name: configure each vm
  hosts: core
  become: true
  pre_tasks:
    - name: install general dependencies
      apt:
        pkg:
          - sudo
          - git
          - vim
          - curl
          - python3-pip
          - build-essential
          - lsb-release
          - rsync
          - nfs-common
          - apparmor
        state: latest
        update_cache: true

    - name: Check for reboot
      stat:
        path: /var/run/reboot-required
        get_md5: false
      register: reboot_required

    - name: Reboot if kernel updates need installed
      reboot:
        msg: "Reboot started by Ansible to install kernel updates"
        connect_timeout: 5
        reboot_timeout: 300
        pre_reboot_delay: 0
        post_reboot_delay: 30
        test_command: uptime
      when: reboot_required.stat.exists

  tasks:
    - name: Mount TrueNAS NFS
      mount:
        src: "{{ truenas_nfs_path }}"
        path: /mnt/docker
        opts: rw,soft,intr,nfsvers=4
        fstype: nfs
        state: mounted
    
    - name: push docker files to remote
      synchronize:
        src: "../../../{{ repo_subdir }}"
        dest: /home/docker
        recursive: true
        checksum: true
        archive: false

    - name: set owner and permissions of pushed files
      file:
        path: "/home/docker/{{ repo_subdir }}"
        owner: docker
        group: nogroup
        mode: '0776'
        recurse: yes

- name: configure grafana volume
  hosts: carthage.agartha
  become: true
  tasks:
    - name: set grafana owner for bind mounts
      file:
        path: "{{ item }}"
        owner: 472
        group: 472
        recurse: true
      loop:
        - /home/docker/carthage/grafana
        - /home/docker/data/grafana

    - name: set prometheus owner for bind mounts
      file:
        path: "{{ item }}"
        owner: 65534
        group: 65534
        recurse: true
      loop:
        - /home/docker/carthage/prometheus
        - /home/docker/data/prometheus

- name: start docker containers
  hosts: core
  become: true
  remote_user: docker
  roles:
    - name: install docker
      role: geerlingguy.docker
      vars:
        docker_users: 
          - docker
          - ansible
          - "{{ personal_user }}"
        docker_install_compose_plugin: true
        docker_compose_package: docker-compose-plugin
        docker_compose_package_state: present

  tasks:
    - name: start docker containers
      shell:
        cmd: 'docker compose up --detach --remove-orphans'
        chdir: "/home/docker/{{ repo_subdir }}"
      changed_when: false
    
    - name: restart docker containers
      shell:
        cmd: 'docker compose restart'
        chdir: "/home/docker/{{ repo_subdir }}"
      changed_when: false
    # TODO: somehow only fire this on changes to pushed repo?

    - name: get docker container info
      shell: docker ps
      register: docker_info
      changed_when: false

    - debug:
        msg: "{{ docker_info.stdout_lines }}"

    - name: remove unused docker images, containers, volumes
      shell: docker system prune --all --force
      changed_when: false

- name: configure Portainer on athens
  import_playbook: athens_portainer.yml

- name: giza mount media directories
  hosts: giza.agartha
  become: true
  tasks:
    - name: mount media directories
      mount:
        src: "truenas-service.agartha:/mnt/mesopotamia/nfs/media"
        path: "/mnt/media"
        opts: rw,soft,intr,nfsvers=4
        fstype: nfs
        state: mounted

- name: athens mount media directories
  hosts: athens.agartha
  become: true
  tasks:
    - name: mount media directories
      mount:
        src: "truenas-manage.agartha:/mnt/mesopotamia/nfs/media"
        path: "/mnt/media"
        opts: rw,soft,intr,nfsvers=4
        fstype: nfs
        state: mounted
