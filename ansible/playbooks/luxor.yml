- name: create luxor
  hosts: babylon.agartha
  become: true
  remote_user: root
  gather_facts: false
  vars_files:
    - ../vars/secrets.yml
    # - ../host_vars/luxor.agartha.yml
  tasks:
    - name: create luxor LXC
      proxmox:
        vmid: 200
        description: 'Automation server'
        hostname: luxor
        password: "{{ luxor_password }}"
        node: "{{ primary_pve_node }}"
        api_host: "{{ primary_pve_node + '.' + domain }}"
        api_user: "{{ api_user }}"
        api_token_id: "{{ api_token_id }}"
        api_token_secret: "{{ api_token_secret }}"
        ostemplate: 'local:vztmpl/debian-11-standard_11.6-1_amd64.tar.zst'
        cores: 1
        storage: ssd0
        disk: 'ssd0:16'
        memory: 2048
        swap: 2048
        netif: '{"net0":"name=eth0,gw=10.42.10.1,ip=10.42.10.26/24,bridge=vmbr0"}'
        nameserver: "{{ dns_server }}"
        searchdomain: "{{ domain }}"
        pubkey: "{{ ansible_ssh_pub }}"
        onboot: true
        unprivileged: true
        features:
          - nesting=1
        state: present
      register: luxor_create
      # TODO: use vars

    - name: wait for create to finish
      pause:
        seconds: 10
      when: luxor_create.changed

    - name: deploy luxor
      proxmox:
        hostname: luxor
        api_host: "{{ primary_pve_node + '.' + domain }}"
        api_user: "{{ api_user }}"
        api_token_id: "{{ api_token_id }}"
        api_token_secret: "{{ api_token_secret }}"
        unprivileged: true
        state: started
      when: luxor_create.changed

    - name: wait for boot to finish
      pause:
        seconds: 10
      when: luxor_create.changed

    - name: upgrade packages
      shell: pct exec 200 -- bash -c "apt update && apt upgrade -y"
      changed_when: luxor_create.changed
      when: luxor_create.changed
      # TODO: use vars

    - name: enable root ssh login
      shell: pct exec 200 -- bash -c "sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin prohibit-password/g' /etc/ssh/sshd_config"
      changed_when: luxor_create.changed
      when: luxor_create.changed
      # TODO: use vars

    - name: enable ssh public key authentication
      shell: pct exec 200 -- bash -c "sed -i 's/#PubkeyAuthentication yes/PubkeyAuthentication yes/g' /etc/ssh/sshd_config"
      changed_when: luxor_create.changed
      when: luxor_create.changed
      # TODO: use vars

    - name: fix sshd
      shell: pct exec 200 -- bash -c "echo 'RuntimeDirectoryPreserve=yes' >> /lib/systemd/system/ssh@.service"
      changed_when: luxor_create.changed
      when: luxor_create.changed
      # TODO: use vars

    - name: restart luxor
      proxmox:
        hostname: luxor
        api_host: "{{ primary_pve_node + '.' + domain }}"
        api_user: "{{ api_user }}"
        api_token_id: "{{ api_token_id }}"
        api_token_secret: "{{ api_token_secret }}"
        unprivileged: true
        state: restarted
      changed_when: luxor_create.changed
      when: luxor_create.changed

    - name: wait for ssh port available
      wait_for:
        host: luxor.agartha
        port: 22
        delay: 10
        state: started
        timeout: 300
      when: luxor_create.changed

- name: configure luxor server
  hosts: luxor.agartha
  become: true
  remote_user: root
  vars_files:
    - ../vars/secrets.yml
  roles:
    - role: ../roles/sshd
    - role: ../roles/wheel

    - role: ../roles/user
      vars:
        user: "{{ personal_user }}"
        comment: 'personal user'
        password: "{{ personal_password }}"
        user_groups: 'wheel'
        ssh_pub: "{{ personal_ssh_pub }}"

    - role: ../roles/user
      vars:
        user: ansible
        comment: 'ansible service user'
        user_groups: 'wheel'
        ssh_pub: "{{ ansible_ssh_pub }}"

    - role: ../roles/user
      vars:
        user: docker
        comment: 'docker service user'
        user_groups: 'wheel'
        ssh_pub: "{{ docker_ssh_pub }}"

    # - role: geerlingguy.docker
    #   vars:
    #     docker_users: ['docker']

  tasks:
    - name: install general dependencies
      apt:
        pkg:
          - git
          - vim
          - curl
          - python3-pip
          - build-essential
          - lsb-release
        state: latest
        update_cache: true
